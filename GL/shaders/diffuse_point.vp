#version 120

// Transformation Matrix
uniform mat4	mvMatrix;
uniform mat4	mvpMatrix;
uniform mat4 normalMatrix;
uniform float uTime;
uniform vec3 uLightPosition;

// Incoming per vertex
attribute vec4 vVertex;
attribute vec4 vColor;
attribute vec3 vNormal;
varying vec4 vVaryingColor;
varying vec3 vVaryingNormal;
varying vec3 vVaryingLightDirection;

void main(void) 
{ 
  vVaryingNormal = vec3(normalMatrix * vec4(vNormal, 0));
  vec4 hpos = mvMatrix * vVertex;
  vec3 pos = hpos.xyz / hpos.w;
  
  //vVaryingLightDirection = normalize(uLightPosition - pos);
  vVaryingLightDirection = normalize(vec3(7*sin(uTime),1+3*cos(uTime*.4),5+3*sin(1.7*uTime)) - pos);

  gl_Position = mvpMatrix * vVertex;
}
